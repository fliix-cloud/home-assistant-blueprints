blueprint:
  name: Reolink Camera Notification with Dynamic Helper
  description: Sends a snapshot from the Reolink camera via Pushover when a Pet, Person, Car, Package, or Visitor is detected, but only if the specified interval has passed since the last notification.
  domain: automation
  input:
    camera_entity:
      name: Camera
      description: The camera that will provide the snapshot.
      selector:
        entity:
          domain: camera
    motion_sensor:
      name: Motion Sensor
      description: The motion sensor that provides the 1/0 state.
      selector:
        entity:
          domain: binary_sensor
    detected_object:
      name: Detected Object
      description: Specify the detected object (e.g., Pet, Person, Car, Package, Visitor).
      selector:
        text:
    camera_location:
      name: Camera Location
      description: Specify the location of the camera (e.g., Doorbell, Backdoor, Garden).
      selector:
        text:
    interval:
      name: Minimum Interval
      description: Minimum time interval (in seconds) between notifications.
      default: 60
      selector:
        number:
          min: 10
          max: 600
          unit_of_measurement: seconds

mode: single

trigger:
  - platform: state
    entity_id: !input motion_sensor
    from: "off"
    to: "on"

#variables:
#  helper_entity: >
#    {{ 'input_datetime.' + states['!input.motion_sensor'].object_id + '_last_triggered' | replace('binary_sensor.', '') }}

#condition:
#  - condition: template
#    value_template: >
#      {% set last_triggered = states(helper_entity).state %}
#      {{ last_triggered == none or (as_timestamp(now()) - as_timestamp(last_triggered)) | int > (input.interval | int) }}

action:
  - variables:
      detected_object: !input detected_object
      camera_location: !input camera_location
      snapshot_file: "/config/www/snapshot_{{ states['!input.camera_entity'].object_id }}.jpg"
  
  - service: camera.snapshot
    data:
      entity_id: !input camera_entity
      filename: "{{ snapshot_file }}"
  
  - service: notify.pushover_reolink
    data:
      title: "{{ detected_object }} detected"
      message: "{{ detected_object }} detected at {{ camera_location }}"
      data:
        attachment: "{{ snapshot_file }}"

  - service: input_datetime.set_datetime
    target:
      entity_id: "{{ helper_entity }}"
    data:
      timestamp: "{{ as_timestamp(now()) }}"
